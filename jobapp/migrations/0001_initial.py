# Generated by Django 3.2.9 on 2022-02-07 09:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='applicant',
            fields=[
                ('applicant_id', models.AutoField(primary_key=True, serialize=False)),
                ('applicant_doc', models.CharField(max_length=100, verbose_name='doc')),
                ('applicant_status', models.CharField(max_length=100, verbose_name='status')),
                ('exam_status', models.CharField(max_length=100, verbose_name='status')),
                ('resume_status', models.CharField(max_length=100, verbose_name='status')),
                ('result_status', models.CharField(max_length=100, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='candidate',
            fields=[
                ('candidate_id', models.AutoField(primary_key=True, serialize=False)),
                ('candidate_name', models.CharField(max_length=100, verbose_name='name')),
                ('candidate_address', models.CharField(max_length=500, verbose_name='address')),
                ('candidate_email', models.CharField(max_length=100, verbose_name='email')),
                ('candidate_phone', models.CharField(max_length=100, verbose_name='phone_no')),
                ('candidate_photo', models.FileField(upload_to='', verbose_name='photo:')),
                ('candidate_lastqualification', models.CharField(max_length=100, verbose_name='email')),
                ('candidate_experienced', models.CharField(max_length=100, verbose_name='email')),
                ('andidate_totalexperienced', models.CharField(max_length=100, verbose_name='email')),
            ],
        ),
        migrations.CreateModel(
            name='company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100, verbose_name='name')),
                ('company_address', models.CharField(max_length=500, verbose_name='address')),
                ('company_email', models.CharField(max_length=100, verbose_name='email')),
                ('company_phone', models.CharField(max_length=100, verbose_name='phone_no')),
                ('company_poc', models.CharField(max_length=100, verbose_name='poc_no')),
                ('company_location', models.CharField(max_length=100, verbose_name='location')),
                ('company_pocmail', models.CharField(max_length=100, verbose_name='pocmail')),
                ('comapany_pocdis', models.CharField(max_length=100, verbose_name='posdis')),
                ('company_pocphone', models.CharField(max_length=100, verbose_name='pocphone')),
                ('company_logo', models.FileField(upload_to='', verbose_name='photo:')),
                ('company_regno', models.CharField(max_length=100, verbose_name='regno')),
                ('company_foundedyear', models.CharField(max_length=100, verbose_name='fyear')),
                ('company_status', models.CharField(max_length=100, verbose_name='status:')),
            ],
        ),
        migrations.CreateModel(
            name='job',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=100, verbose_name='title')),
                ('job_role', models.CharField(max_length=100, verbose_name='role')),
                ('job_designation', models.CharField(max_length=100, verbose_name='desig')),
                ('job_qualificaion', models.CharField(max_length=100, verbose_name='qualification')),
                ('job_experience', models.CharField(max_length=100, verbose_name='experience')),
                ('job_experiencein', models.CharField(max_length=100, verbose_name='experiencein')),
                ('job_salary', models.CharField(max_length=100, verbose_name='salary')),
                ('job_location', models.CharField(max_length=100, verbose_name='location')),
                ('job_qcount', models.CharField(max_length=100, verbose_name='qcount')),
                ('job_status', models.CharField(max_length=100, verbose_name='status')),
                ('company_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.company')),
            ],
        ),
        migrations.CreateModel(
            name='login',
            fields=[
                ('logid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, verbose_name='username')),
                ('password', models.CharField(max_length=100, verbose_name='password')),
                ('role', models.CharField(max_length=10, verbose_name='role')),
            ],
        ),
        migrations.CreateModel(
            name='result',
            fields=[
                ('result_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.CharField(max_length=100, verbose_name='score')),
                ('toquest', models.CharField(max_length=100, verbose_name='toquest')),
                ('status', models.CharField(max_length=100, verbose_name='status')),
                ('applicant_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.applicant')),
            ],
        ),
        migrations.CreateModel(
            name='question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question_no', models.CharField(max_length=100, verbose_name='qno')),
                ('question', models.CharField(max_length=100, verbose_name='qn')),
                ('option1', models.CharField(max_length=100, verbose_name='op1')),
                ('option2', models.CharField(max_length=100, verbose_name='op2')),
                ('option3', models.CharField(max_length=100, verbose_name='op3')),
                ('option4', models.CharField(max_length=100, verbose_name='op4')),
                ('option5', models.CharField(max_length=100, verbose_name='op5')),
                ('job_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.job')),
            ],
        ),
        migrations.CreateModel(
            name='qualificaton',
            fields=[
                ('qualification_id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.CharField(max_length=100, verbose_name='course')),
                ('passyear', models.CharField(max_length=100, verbose_name='passyear')),
                ('score', models.CharField(max_length=100, verbose_name='score')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='invitation',
            fields=[
                ('invit_id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=100, verbose_name='status')),
                ('invit_venu', models.CharField(max_length=100, verbose_name='venu')),
                ('invit_time', models.CharField(max_length=100, verbose_name='time')),
                ('result_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.result')),
            ],
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('feed_id', models.AutoField(primary_key=True, serialize=False)),
                ('feed_sub', models.CharField(max_length=200, verbose_name='sub')),
                ('feed_msg', models.CharField(max_length=500, verbose_name='message')),
                ('feed_reply', models.CharField(max_length=500, verbose_name='reply')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='experience',
            fields=[
                ('experience_id', models.AutoField(primary_key=True, serialize=False)),
                ('exp_company', models.CharField(max_length=100, verbose_name='expcompany')),
                ('exp_months', models.CharField(max_length=100, verbose_name='expmonths')),
                ('exp_from', models.CharField(max_length=100, verbose_name='expfrom')),
                ('exp_to', models.CharField(max_length=100, verbose_name='expto')),
                ('candidate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='complaint',
            fields=[
                ('complaint_id', models.AutoField(primary_key=True, serialize=False)),
                ('complaint_sub', models.CharField(max_length=200, verbose_name='sub')),
                ('complaint_msg', models.CharField(max_length=500, verbose_name='message')),
                ('complaint_reply', models.CharField(max_length=500, verbose_name='reply')),
                ('comapany_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.company')),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='logid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.login'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='logid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.login'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='candidate_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.candidate'),
        ),
        migrations.AddField(
            model_name='applicant',
            name='job_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobapp.job'),
        ),
    ]
